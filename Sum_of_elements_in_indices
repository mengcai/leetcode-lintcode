Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.
Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
sumRange(0, 0) -> -2
Note:
You may assume that the array does not change.
There are many calls to sumRange function.

class Solution:
    # method 1
    def sumRange(self, nums, i, j):
        if len(nums) == 0:
            return 0  
        if i > j: i ,j = j, i
        if i == j: return nums[i]
        n = j - i
        sum = 0
        while n >= 0:
            sum += nums[i + n]
            n -= 1
        return sum
    
    # method 2
    def sumRange(self, nums, i, j):   
        copy = []
        if len(nums) == 0:
            return 0  
        if i == j: return nums[i]
        n = len(nums)    
        sum = 0
        for m in range(0, n):
            sum += nums[m]
            copy.append(sum)
        if i == 0: 
            return copy[j]
        else:
            return copy[j] - copy[i - 1]

if __name__ == "__main__":
    print Solution().sumRange([-2, 0, 3, -5, 2, -1], 0, 5)
